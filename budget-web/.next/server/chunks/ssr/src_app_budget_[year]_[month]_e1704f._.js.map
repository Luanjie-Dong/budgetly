{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/luanjiechen/Desktop/Projects/Personal_Projects/3.budget/budget-web/src/app/budget/%5Byear%5D/%5Bmonth%5D/filter.tsx"],"sourcesContent":["interface FilterBarProps {\n    categories: string[];\n    types: string[];\n    selectedCategory: string;\n    selectedType: string;\n    setSelectedCategory: (value: string) => void;\n    setSelectedType: (value: string) => void;\n  }\n  \n  export default function FilterBar({\n    categories,\n    types,\n    selectedCategory,\n    selectedType,\n    setSelectedCategory,\n    setSelectedType,\n  }: FilterBarProps) {\n\n    const handleCategoryChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n      setSelectedCategory(e.target.value);\n    };\n  \n    const handleTypeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n      setSelectedType(e.target.value);\n    };\n  \n    return (\n      <div className=\"p-6 bg-white dark:bg-gray-800 rounded-lg shadow-lg mb-4\">\n        \n        <div className=\"flex flex-col md:flex-row gap-4\">\n            {/* Category Filter */}\n            <div className=\"w-full md:w-1/2\">\n                <label\n                htmlFor=\"category\"\n                className=\"block text-sm font-medium dark:text-gray-300 mb-2\"\n                >\n                Category\n                </label>\n                <select\n                id=\"category\"\n                value={selectedCategory}\n                onChange={handleCategoryChange}\n                className=\"block w-full px-4 py-2 text-gray-800  dark:text-gray-300 bg-gray-50 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                <option value=\"\">Select</option>\n                {categories.map((category, index) => (\n                    <option key={index} value={category}>\n                    {category}\n                    </option>\n                ))}\n                </select>\n            </div>\n    \n            {/* Type Filter */}\n            <div className=\"w-full md:w-1/2\">\n                <label\n                htmlFor=\"type\"\n                className=\"block text-sm font-medium dark:text-gray-300 mb-2\"\n                >\n                Type\n                </label>\n                <select\n                id=\"type\"\n                value={selectedType}\n                onChange={handleTypeChange}\n                className=\"block w-full px-4 py-2 text-gray-800 dark:text-gray-300 bg-gray-50 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                <option value=\"\">Select</option>\n                {types.map((type, index) => (\n                    <option key={index} value={type}>\n                    {type}\n                    </option>\n                ))}\n                </select>\n            </div>\n            <button\n                className=\"px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-300 transition\"\n                onClick={() => {\n                setSelectedCategory(\"\");\n                setSelectedType(\"\");\n                }}\n            >\n                Clear Filter\n            </button>\n            </div>\n      </div>\n    );\n  }\n  "],"names":[],"mappings":";;;;;AASiB,SAAS,UAAU,EAChC,UAAU,EACV,KAAK,EACL,gBAAgB,EAChB,YAAY,EACZ,mBAAmB,EACnB,eAAe,EACA;IAEf,MAAM,uBAAuB,CAAC;QAC5B,oBAAoB,EAAE,MAAM,CAAC,KAAK;IACpC;IAEA,MAAM,mBAAmB,CAAC;QACxB,gBAAgB,EAAE,MAAM,CAAC,KAAK;IAChC;IAEA,qBACE,8OAAC;QAAI,WAAU;kBAEb,cAAA,8OAAC;YAAI,WAAU;;8BAEX,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BACD,SAAQ;4BACR,WAAU;sCACT;;;;;;sCAGD,8OAAC;4BACD,IAAG;4BACH,OAAO;4BACP,UAAU;4BACV,WAAU;;8CAEV,8OAAC;oCAAO,OAAM;8CAAG;;;;;;gCAChB,WAAW,GAAG,CAAC,CAAC,UAAU,sBACvB,8OAAC;wCAAmB,OAAO;kDAC1B;uCADY;;;;;;;;;;;;;;;;;8BAQrB,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BACD,SAAQ;4BACR,WAAU;sCACT;;;;;;sCAGD,8OAAC;4BACD,IAAG;4BACH,OAAO;4BACP,UAAU;4BACV,WAAU;;8CAEV,8OAAC;oCAAO,OAAM;8CAAG;;;;;;gCAChB,MAAM,GAAG,CAAC,CAAC,MAAM,sBACd,8OAAC;wCAAmB,OAAO;kDAC1B;uCADY;;;;;;;;;;;;;;;;;8BAMrB,8OAAC;oBACG,WAAU;oBACV,SAAS;wBACT,oBAAoB;wBACpB,gBAAgB;oBAChB;8BACH;;;;;;;;;;;;;;;;;AAMX"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///Users/luanjiechen/Desktop/Projects/Personal_Projects/3.budget/budget-web/src/app/budget/%5Byear%5D/%5Bmonth%5D/transaction.tsx"],"sourcesContent":["interface Transaction {\n    category: string;\n    Information: string;\n    type: string;\n    date: Date;\n    recieve: number;\n    spend: number;\n    key: string;\n  }\n  \n  interface TransactionProps {\n    transaction: Transaction;\n    handleUpdate: (key: string, field: string, value: string) => Promise<void>;\n    index: number;\n    categories: string[];\n    types: string[];\n  }\n  \n  export default function TransactionBar({ transaction, handleUpdate, index, categories, types}: TransactionProps) {\n\n    return (\n        <div\n        key={index}\n        className={`rounded-lg p-4 shadow hover:shadow-lg transition my-4 ${\n            !transaction.category || !transaction.type ? \"bg-yellow-50\" : \"bg-white dark:bg-gray-700\"\n        }`}\n        >\n        <div className=\"flex flex-wrap md:flex-nowrap items-center gap-4 justify-center\">\n            <p className=\"text-lg font-medium text-gray-600 dark:text-gray-300 w-28\">\n            {new Date(transaction.date).toLocaleDateString()}\n            </p>\n            <p className=\"text-lg text-red-500 font-semibold w-20\">\n            Spend: ${transaction.spend.toFixed(2)}\n            </p>\n            <p className=\"text-lg text-green-500 font-semibold w-20\">\n            Receive: ${transaction.recieve.toFixed(2)}\n            </p>\n            <div className=\"w-38\">\n            <label className=\"block text-lg text-center font-medium text-gray-700 dark:text-gray-300\">\n                Category\n            </label>\n            <select\n                value={transaction.category || \"\"}\n                onChange={(e) =>\n                handleUpdate(transaction.key, \"category\", e.target.value)\n                }\n                className={`mt-1 block w-full px-3 py-1.5 text-gray-800 dark:text-gray-300 rounded-md ${\n                transaction.category === \"Spending\"\n                    ? \"bg-red-400 dark:bg-red-600\"\n                    : transaction.category === \"Income\"\n                    ? \"bg-green-400 dark:bg-green-600\"\n                    : transaction.category === \"Saving\"\n                    ? \"bg-blue-400 dark:bg-blue-600\"\n                    : \"bg-gray-100 dark:bg-gray-700\"\n                }`}\n            >\n                <option value=\"\">Select</option>\n                {categories.map((category, index) => (\n                <option key={index}>{category}</option>\n                ))}\n            </select>\n            </div>\n            <div className=\"w-38\">\n            <label className=\"block text-lg text-center font-medium text-gray-700 dark:text-gray-300\">\n                Type\n            </label>\n            <select\n                value={transaction.type || \"\"}\n                onChange={(e) =>\n                handleUpdate(transaction.key, \"type\", e.target.value)\n                }\n                className=\"mt-1 block w-full px-3 py-1.5 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-300 rounded-md text-center\"\n            >\n                <option value=\"\">Select</option>\n                {types.map((type, index) => (\n                <option key={index}>{type}</option>\n                ))}\n            </select>\n            </div>\n        </div>\n        <div className=\"text-center p-4\">\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 flex-grow\">\n            {transaction.Information}\n            </p>\n        </div>\n        </div>\n    )\n}"],"names":[],"mappings":";;;;;AAkBiB,SAAS,eAAe,EAAE,WAAW,EAAE,YAAY,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAmB;IAE7G,qBACI,8OAAC;QAED,WAAW,CAAC,sDAAsD,EAC9D,CAAC,YAAY,QAAQ,IAAI,CAAC,YAAY,IAAI,GAAG,iBAAiB,6BAChE;;0BAEF,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAE,WAAU;kCACZ,IAAI,KAAK,YAAY,IAAI,EAAE,kBAAkB;;;;;;kCAE9C,8OAAC;wBAAE,WAAU;;4BAA0C;4BAC9C,YAAY,KAAK,CAAC,OAAO,CAAC;;;;;;;kCAEnC,8OAAC;wBAAE,WAAU;;4BAA4C;4BAC9C,YAAY,OAAO,CAAC,OAAO,CAAC;;;;;;;kCAEvC,8OAAC;wBAAI,WAAU;;0CACf,8OAAC;gCAAM,WAAU;0CAAyE;;;;;;0CAG1F,8OAAC;gCACG,OAAO,YAAY,QAAQ,IAAI;gCAC/B,UAAU,CAAC,IACX,aAAa,YAAY,GAAG,EAAE,YAAY,EAAE,MAAM,CAAC,KAAK;gCAExD,WAAW,CAAC,0EAA0E,EACtF,YAAY,QAAQ,KAAK,aACnB,+BACA,YAAY,QAAQ,KAAK,WACzB,mCACA,YAAY,QAAQ,KAAK,WACzB,iCACA,gCACJ;;kDAEF,8OAAC;wCAAO,OAAM;kDAAG;;;;;;oCAChB,WAAW,GAAG,CAAC,CAAC,UAAU,sBAC3B,8OAAC;sDAAoB;2CAAR;;;;;;;;;;;;;;;;;kCAIjB,8OAAC;wBAAI,WAAU;;0CACf,8OAAC;gCAAM,WAAU;0CAAyE;;;;;;0CAG1F,8OAAC;gCACG,OAAO,YAAY,IAAI,IAAI;gCAC3B,UAAU,CAAC,IACX,aAAa,YAAY,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,KAAK;gCAEpD,WAAU;;kDAEV,8OAAC;wCAAO,OAAM;kDAAG;;;;;;oCAChB,MAAM,GAAG,CAAC,CAAC,MAAM,sBAClB,8OAAC;sDAAoB;2CAAR;;;;;;;;;;;;;;;;;;;;;;;0BAKrB,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAE,WAAU;8BACZ,YAAY,WAAW;;;;;;;;;;;;OA5DvB;;;;;AAiEb"}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///Users/luanjiechen/Desktop/Projects/Personal_Projects/3.budget/budget-web/src/app/budget/%5Byear%5D/%5Bmonth%5D/chart.tsx"],"sourcesContent":["import React from 'react';\n\ninterface ChartDataProps {\n  currentData: {\n    type: string;\n    category: string;\n    spend: number;\n    recieve: number\n  }[];\n}\n\nexport const generateChartData = (currentData: ChartDataProps['currentData']) => {\n    const groupDataByCategory = (data: typeof currentData, targetCategory: string) => {\n        const grouped = data\n          .filter((item) => item.category === targetCategory) \n          .reduce((summary, item) => {\n            if (!summary[item.type]) {\n              summary[item.type] = 0;\n            }\n\n            if (targetCategory == \"Income\" || targetCategory == \"Offset\"){\n                summary[item.type] += item.recieve;\n            }\n            else{   \n                summary[item.type] += item.spend;\n            }\n            \n            return summary;\n          }, {} as Record<string, number>);\n      \n        const labels = Object.keys(grouped);\n        const amounts = Object.values(grouped);\n      \n        return { labels, amounts };\n      };\n\n    const { labels: expenselabels, amounts: expenseamounts } = groupDataByCategory(currentData, \"Spending\");\n    const { labels: savinglabels, amounts: savingamounts } = groupDataByCategory(currentData, \"Saving\");\n    const { labels: incomelabels, amounts: incomeamounts } = groupDataByCategory(currentData, \"Income\");\n    const { labels: offsetlabels, amounts: offsetamounts } = groupDataByCategory(currentData, \"Offset\");\n\n    const adjustedExpenseAmounts = expenselabels.map((label, index) => {\n      const offsetIndex = offsetlabels.indexOf(label);\n    \n      if (offsetIndex !== -1) {\n        return expenseamounts[index] - offsetamounts[offsetIndex];\n      }\n\n      return expenseamounts[index];\n    });\n\n  const expensedata = {\n    labels: expenselabels,\n    datasets: [\n      {\n        label: \"Expense Breakdown\",\n        data: adjustedExpenseAmounts,\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.5)\", // Red\n          \"rgba(54, 162, 235, 0.5)\", // Blue\n          \"rgba(255, 206, 86, 0.5)\", // Yellow\n          \"rgba(75, 192, 192, 0.5)\", // Green\n          \"rgba(153, 102, 255, 0.5)\", // Purple\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\", // Red\n          \"rgba(54, 162, 235, 1)\", // Blue\n          \"rgba(255, 206, 86, 1)\", // Yellow\n          \"rgba(75, 192, 192, 1)\", // Green\n          \"rgba(153, 102, 255, 1)\", // Purple\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const savingdata = {\n    labels: savinglabels,\n    datasets: [\n      {\n        label: \"Savings Breakdown\",\n        data: savingamounts,\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.5)\", // Red\n          \"rgba(54, 162, 235, 0.5)\", // Blue\n          \"rgba(255, 206, 86, 0.5)\", // Yellow\n          \"rgba(75, 192, 192, 0.5)\", // Green\n          \"rgba(153, 102, 255, 0.5)\", // Purple\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\", // Red\n          \"rgba(54, 162, 235, 1)\", // Blue\n          \"rgba(255, 206, 86, 1)\", // Yellow\n          \"rgba(75, 192, 192, 1)\", // Green\n          \"rgba(153, 102, 255, 1)\", // Purple\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const incomedata = {\n    labels: incomelabels,\n    datasets: [\n      {\n        label: \"Savings Breakdown\",\n        data: incomeamounts,\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.5)\", // Red\n          \"rgba(54, 162, 235, 0.5)\", // Blue\n          \"rgba(255, 206, 86, 0.5)\", // Yellow\n          \"rgba(75, 192, 192, 0.5)\", // Green\n          \"rgba(153, 102, 255, 0.5)\", // Purple\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\", // Red\n          \"rgba(54, 162, 235, 1)\", // Blue\n          \"rgba(255, 206, 86, 1)\", // Yellow\n          \"rgba(75, 192, 192, 1)\", // Green\n          \"rgba(153, 102, 255, 1)\", // Purple\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\" as \"top\", \n      },\n      datalabels: {\n        color: \"#fff\",\n        font: {\n          size: 14,\n        },\n        formatter: (value: number, context: any) => {\n          const label = context.chart.data.labels[context.dataIndex];\n          return `$${value.toFixed(2)}`;\n        },\n      },\n    },\n  };\n\n  return { expensedata, savingdata, incomedata , options };\n};\n"],"names":[],"mappings":";;;AAWO,MAAM,oBAAoB,CAAC;IAC9B,MAAM,sBAAsB,CAAC,MAA0B;QACnD,MAAM,UAAU,KACb,MAAM,CAAC,CAAC,OAAS,KAAK,QAAQ,KAAK,gBACnC,MAAM,CAAC,CAAC,SAAS;YAChB,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,EAAE;gBACvB,OAAO,CAAC,KAAK,IAAI,CAAC,GAAG;YACvB;YAEA,IAAI,kBAAkB,YAAY,kBAAkB,UAAS;gBACzD,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO;YACtC,OACI;gBACA,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,KAAK;YACpC;YAEA,OAAO;QACT,GAAG,CAAC;QAEN,MAAM,SAAS,OAAO,IAAI,CAAC;QAC3B,MAAM,UAAU,OAAO,MAAM,CAAC;QAE9B,OAAO;YAAE;YAAQ;QAAQ;IAC3B;IAEF,MAAM,EAAE,QAAQ,aAAa,EAAE,SAAS,cAAc,EAAE,GAAG,oBAAoB,aAAa;IAC5F,MAAM,EAAE,QAAQ,YAAY,EAAE,SAAS,aAAa,EAAE,GAAG,oBAAoB,aAAa;IAC1F,MAAM,EAAE,QAAQ,YAAY,EAAE,SAAS,aAAa,EAAE,GAAG,oBAAoB,aAAa;IAC1F,MAAM,EAAE,QAAQ,YAAY,EAAE,SAAS,aAAa,EAAE,GAAG,oBAAoB,aAAa;IAE1F,MAAM,yBAAyB,cAAc,GAAG,CAAC,CAAC,OAAO;QACvD,MAAM,cAAc,aAAa,OAAO,CAAC;QAEzC,IAAI,gBAAgB,CAAC,GAAG;YACtB,OAAO,cAAc,CAAC,MAAM,GAAG,aAAa,CAAC,YAAY;QAC3D;QAEA,OAAO,cAAc,CAAC,MAAM;IAC9B;IAEF,MAAM,cAAc;QAClB,QAAQ;QACR,UAAU;YACR;gBACE,OAAO;gBACP,MAAM;gBACN,iBAAiB;oBACf;oBACA;oBACA;oBACA;oBACA;iBACD;gBACD,aAAa;oBACX;oBACA;oBACA;oBACA;oBACA;iBACD;gBACD,aAAa;YACf;SACD;IACH;IAEA,MAAM,aAAa;QACjB,QAAQ;QACR,UAAU;YACR;gBACE,OAAO;gBACP,MAAM;gBACN,iBAAiB;oBACf;oBACA;oBACA;oBACA;oBACA;iBACD;gBACD,aAAa;oBACX;oBACA;oBACA;oBACA;oBACA;iBACD;gBACD,aAAa;YACf;SACD;IACH;IAEA,MAAM,aAAa;QACjB,QAAQ;QACR,UAAU;YACR;gBACE,OAAO;gBACP,MAAM;gBACN,iBAAiB;oBACf;oBACA;oBACA;oBACA;oBACA;iBACD;gBACD,aAAa;oBACX;oBACA;oBACA;oBACA;oBACA;iBACD;gBACD,aAAa;YACf;SACD;IACH;IAEA,MAAM,UAAU;QACd,YAAY;QACZ,SAAS;YACP,QAAQ;gBACN,UAAU;YACZ;YACA,YAAY;gBACV,OAAO;gBACP,MAAM;oBACJ,MAAM;gBACR;gBACA,WAAW,CAAC,OAAe;oBACzB,MAAM,QAAQ,QAAQ,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,SAAS,CAAC;oBAC1D,OAAO,CAAC,CAAC,EAAE,MAAM,OAAO,CAAC,IAAI;gBAC/B;YACF;QACF;IACF;IAEA,OAAO;QAAE;QAAa;QAAY;QAAa;IAAQ;AACzD"}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":["file:///Users/luanjiechen/Desktop/Projects/Personal_Projects/3.budget/budget-web/src/app/budget/%5Byear%5D/%5Bmonth%5D/page.tsx"],"sourcesContent":["'use client'\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from 'next/navigation';\nimport { useSearchParams } from \"next/navigation\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport FilterBar from \"./filter\";\nimport TransactionBar from \"./transaction\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  RadialLinearScale,\n  ArcElement,\n  LinearScale,\n  BarElement,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar , Pie} from 'react-chartjs-2';\nimport { generateChartData } from \"./chart\";\n\nChartJS.register(RadialLinearScale, ArcElement, CategoryScale,LinearScale,BarElement,Tooltip, Legend, ChartDataLabels);\n\ninterface transaction{\n    category:string,\n    Information:string,\n    type:string,\n    date: Date,\n    recieve: number,\n    spend:number\n    key:string\n  }\n\ninterface MonthPageProps {\n  params: Promise<{ month: string }>;\n}\n\ninterface summary {\n  type: string,\n  total: number,\n}\n\ninterface budget {\n  name:string,\n  amount:number\n}\n\ninterface GroupedTransaction {\n  totalSpend: number;\n  totalReceive: number;\n  transactions: transaction[];\n}\n\nexport default function Month({ params }: MonthPageProps) {\n    const [selectedCategory, setSelectedCategory] = useState<string>(\"\");\n    const [selectedType, setSelectedType] = useState<string>(\"\");\n    const [transactionData,setTransactionData] = useState<transaction[]>([])\n    const [expandedDays, setExpandedDays] = useState<Record<string, boolean>>({});\n    const [monthlyBudget,setMonthlyBudget] = useState<budget[]>([])\n    const [selectedYear, setSelectedYear] = useState(0)\n    const [currentData,setCurrentData] = useState<transaction[]>([])\n    const { month } = React.use(params);\n    const currentMonth = decodeURIComponent(month)\n    const transactions_endpoint = \"http://127.0.0.1:1000/get-transactions\"\n    const update_endpoint = \"http://127.0.0.1:1000/modify-transactions\"\n    const searchParams = useSearchParams();\n    const types = [\"Food\",\"Others\",\"Ignore\",\"Transportation\",\"Shopping\",\"GF\",\"Phone Bill\", \"Health\",\"Car Rental\",\"Travel\",\"Singlife\",\"Stashaway\",\"Tiger Broker\",\"Job\",\"Parent\"]\n    const categories = [\"Spending\",\"Income\",\"Offset\",\"Saving\",\"Ignore\"]\n    const monthNames = [\n      \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n      \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n      ];\n\n    const groupedTransactions: Record<string, GroupedTransaction> = currentData.reduce(\n      (acc, transaction) => {\n        const day = new Date(transaction.date).toLocaleDateString();\n        if (!acc[day]) {\n          acc[day] = { totalSpend: 0, totalReceive: 0, transactions: [] };\n        }\n        acc[day].transactions.push(transaction);\n        acc[day].totalSpend += transaction.spend;\n        acc[day].totalReceive += transaction.recieve;\n        return acc;\n      },\n      {} as Record<string, GroupedTransaction>\n    );\n      \n    const toggleDay = (day : string) => {\n      setExpandedDays((prev) => ({\n        ...prev,\n        [day]: !prev[day], \n      }));\n    };\n\n    const get_transactions = async () => {\n      try {\n        const url = `${transactions_endpoint}?year=${encodeURIComponent(selectedYear)}`;\n    \n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n    \n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n    \n        const jsonData = await response.json();\n        if (jsonData.length === 0) {\n          setTransactionData([]);\n        } else {\n          setTransactionData(jsonData);\n        } \n      } catch (error) {\n        if (error instanceof Error) {\n          console.log(error.message);\n        }\n      }\n    };\n\n    useEffect(() => {\n      get_transactions();\n      \n    },[selectedYear]);\n\n    useEffect(() => {\n        const yearParam = searchParams.get('year');\n        const year = yearParam ? parseInt(yearParam, 10) : new Date().getFullYear(); \n        if (!isNaN(year)) {\n          setSelectedYear(year); \n        }\n      }, [searchParams]);\n\n    useEffect(() => {\n      const filteredData = transactionData.filter(\n        (x) =>\n          `${monthNames[new Date(x.date).getMonth()]} ${selectedYear}` === currentMonth\n      );\n      setCurrentData(filteredData);\n    }, [transactionData, currentMonth, selectedYear]);\n\n    const handleUpdate = async (transactionId: string, field: string, modify_value: string) => {\n      try {\n          setCurrentData((prev) =>\n              prev.map((transaction) =>\n                  transaction.key === transactionId\n                      ? { ...transaction, [field]: modify_value }\n                      : transaction\n              )\n          );\n  \n          const response = await fetch(update_endpoint, {\n              method: \"POST\",\n              headers: {\n                  \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                  key: transactionId,\n                  category: field, \n                  value: modify_value,\n                  year : searchParams.get('year')\n              }),\n          });\n  \n          if (!response.ok) {\n              const errorDetails = await response.json();\n              throw new Error(errorDetails.message || \"Failed to update transaction\");\n          }\n  \n          console.log(\"Transaction updated successfully\");\n      } catch (error) {\n          console.error(\"Error updating transaction:\", error);\n      }\n  };\n  \n  const { expensedata, savingdata , incomedata , options } = generateChartData(currentData);\n\n  useEffect(() => {\n    const total_spend = currentData.reduce((total, item) => {\n      return item.category === \"Spending\" ? total + item.spend : total;\n    }, 0);\n    \n    const total_receive = currentData.reduce((total, item) => {\n      return item.category === \"Income\" ? total + item.recieve : total;\n    }, 0);\n\n    const total_offset= currentData.reduce((total, item) => {\n      return item.category === \"Offset\" ? total + item.recieve : total;\n    }, 0);\n\n    const total_saving= currentData.reduce((total, item) => {\n      return item.category === \"Saving\" ? total + item.spend : total;\n    }, 0);\n\n    const total_balance = total_receive - (total_spend - total_offset) - total_saving\n    setMonthlyBudget([\n      { name: \"Total Spent\", amount: total_spend - total_offset },\n      { name: \"Total Receive\", amount: total_receive },\n      { name: \"Total Saving\", amount: total_saving },\n      { name: \"Overall Balance\", amount: total_balance },\n    ]);\n  },[currentData])\n  \n\n      \n    return (\n      <div className=\"py-28 flex flex-col justify-center items-center\">\n        <h1 className=\"text-6xl font-bold dark:text-white text-center mb-8\">\n            {currentMonth}\n        </h1>\n        <div className=\"mt-4 flex flex-wrap items-center justify-center gap-12\">\n        {monthlyBudget.map((budget, index) => (\n          <div\n            key={index}\n            className={` rounded-lg shadow-lg p-6 w-60 text-center transition-transform transform hover:scale-105 hover:shadow-2xl ${budget.amount < 0 ? \"bg-red-200\": \"bg-green-200\"}`}\n          >\n            <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">\n              {budget.name}\n            </h3>\n            <p className=\"text-lg text-gray-600\">\n              ${budget.amount.toLocaleString()}\n            </p>\n              </div>\n              ))}\n      </div>\n        <div className=\"flex flex-wrap justify-center gap-8 p-4 h-80\">\n          {/* Income Breakdown */}\n          <div className=\"w-80 text-center bg-white dark:bg-gray-800 shadow-md rounded-lg p-4\">\n            <p className=\"text-xl font-semibold mb-4\">Income Breakdown</p>\n            <div className=\"h-72\"><Bar data={incomedata} options={{ maintainAspectRatio: false }}/></div>\n          </div>\n\n          {/* Expense Breakdown */}\n          <div className=\"w-80 text-center bg-white dark:bg-gray-800 shadow-md rounded-lg p-4\">\n            <p className=\"text-xl font-semibold mb-4\">Expense Breakdown</p>\n            <Pie data={expensedata} options={options} className=\"\"/>\n          </div>\n\n          {/* Saving Breakdown */}\n          <div className=\"w-80 text-center bg-white dark:bg-gray-800 shadow-md rounded-lg p-4\">\n            <p className=\"text-xl font-semibold mb-4\">Saving Breakdown</p>\n            <Pie data={savingdata} options={options} />\n          </div>\n        </div>\n        \n        <div className=\"w-3/4\">\n            <h2 className=\"text-4xl font-semibold mt-24 mb-4 text-center\">\n            Transactions\n            </h2>\n            <hr className=\"mb-4\"></hr>\n            <FilterBar\n              categories={categories}\n              types={types}\n              selectedCategory={selectedCategory}\n              selectedType={selectedType}\n              setSelectedCategory={setSelectedCategory}\n              setSelectedType={setSelectedType}\n            />\n              \n            <div className=\"space-y-4\">\n\n            {selectedCategory || selectedType ? (\n              <div>\n              {currentData\n                .filter((transaction) => {\n                  const matchesCategory = selectedCategory\n                    ? transaction.category === selectedCategory\n                    : true;\n                  const matchesType = selectedType\n                    ? transaction.type === selectedType\n                    : true;\n                  return matchesCategory && matchesType;\n                })\n                .map((transaction, index) => (\n                  <TransactionBar\n                    key={index}\n                    transaction={transaction}\n                    handleUpdate={handleUpdate}\n                    index={index}\n                    categories={categories}\n                    types={types}\n                  />\n                ))}\n            </div>\n            ): (\n              <div>{Object.entries(groupedTransactions).length > 0 ? (\n                Object.entries(groupedTransactions).map(([day, information]) => (\n                  <div key={day} className={`mb-6 rounded-lg p-4 shadow-md ${information.totalReceive - information.totalSpend < 0 ? \"bg-red-100\": \"bg-green-100\"}`}>\n                    {/* Day Header */}\n                    <div\n                      className=\"flex justify-between items-center cursor-pointer gap-12\"\n                      onClick={() => toggleDay(day)}\n                    >\n                      <div className=\"flex gap-12 justify-center items-center text-black\">\n                        <p className=\"text-lg font-medium\">\n                          {day}\n                        </p>\n                        <p className=\"text-lg text-red-500 font-semibold \">\n                          Spend: ${information.totalSpend.toFixed(2)}\n                        </p>\n                        <p className=\"text-lg text-green-500 font-semibold\">\n                          Receive: ${information.totalReceive.toFixed(2)}\n                        </p>\n                      </div>\n                      {information.transactions.some((transaction) => !transaction.category || !transaction.type) && (\n                        <p className=\"text-sm text-gray-600 mt-2\">\n                          <i className=\"fas fa-exclamation-circle text-yellow-500\"></i> Some transactions are missing a category or type.\n                        </p>\n                      )}\n                      <button className=\"text-blue-500 text-lg\">\n                        {expandedDays[day] ? \"Hide Details\" : \"View Details\"}\n                      </button>\n                    </div>\n    \n                {expandedDays?.[day] && (\n                  <div className=\"mt-4 space-y-4\">\n                    {information.transactions.map((transaction, index) => (\n                      <TransactionBar key={index} transaction={transaction} handleUpdate={handleUpdate} index={index}  categories={categories} types={types}/>\n                    ))}\n                  </div>\n                )}\n              </div>\n            ))\n          ) : (\n            <p className=\"text-center text-lg text-gray-500\">No transactions found for this month.</p>\n          )}</div>\n            )}\n            \n            </div>\n        </div>\n        </div>\n      \n      \n    );\n  }"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AACA;AACA;AAYA;AAXA;AAUA;AAjBA;;;;;;;;;;AAoBA,4JAAA,CAAA,QAAO,CAAC,QAAQ,CAAC,4JAAA,CAAA,oBAAiB,EAAE,4JAAA,CAAA,aAAU,EAAE,4JAAA,CAAA,gBAAa,EAAC,4JAAA,CAAA,cAAW,EAAC,4JAAA,CAAA,aAAU,EAAC,4JAAA,CAAA,UAAO,EAAE,4JAAA,CAAA,SAAM,EAAE,iMAAA,CAAA,UAAe;AAgCtG,SAAS,MAAM,EAAE,MAAM,EAAkB;IACpD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACjE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACzD,MAAM,CAAC,iBAAgB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IACvE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA2B,CAAC;IAC3E,MAAM,CAAC,eAAc,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAC9D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,aAAY,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAC/D,MAAM,EAAE,KAAK,EAAE,GAAG,qMAAA,CAAA,UAAK,CAAC,GAAG,CAAC;IAC5B,MAAM,eAAe,mBAAmB;IACxC,MAAM,wBAAwB;IAC9B,MAAM,kBAAkB;IACxB,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,QAAQ;QAAC;QAAO;QAAS;QAAS;QAAiB;QAAW;QAAK;QAAc;QAAS;QAAa;QAAS;QAAW;QAAY;QAAe;QAAM;KAAS;IAC3K,MAAM,aAAa;QAAC;QAAW;QAAS;QAAS;QAAS;KAAS;IACnE,MAAM,aAAa;QACjB;QAAW;QAAY;QAAS;QAAS;QAAO;QAChD;QAAQ;QAAU;QAAa;QAAW;QAAY;KACrD;IAEH,MAAM,sBAA0D,YAAY,MAAM,CAChF,CAAC,KAAK;QACJ,MAAM,MAAM,IAAI,KAAK,YAAY,IAAI,EAAE,kBAAkB;QACzD,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE;YACb,GAAG,CAAC,IAAI,GAAG;gBAAE,YAAY;gBAAG,cAAc;gBAAG,cAAc,EAAE;YAAC;QAChE;QACA,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;QAC3B,GAAG,CAAC,IAAI,CAAC,UAAU,IAAI,YAAY,KAAK;QACxC,GAAG,CAAC,IAAI,CAAC,YAAY,IAAI,YAAY,OAAO;QAC5C,OAAO;IACT,GACA,CAAC;IAGH,MAAM,YAAY,CAAC;QACjB,gBAAgB,CAAC,OAAS,CAAC;gBACzB,GAAG,IAAI;gBACP,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI;YACnB,CAAC;IACH;IAEA,MAAM,mBAAmB;QACvB,IAAI;YACF,MAAM,MAAM,GAAG,sBAAsB,MAAM,EAAE,mBAAmB,eAAe;YAE/E,MAAM,WAAW,MAAM,MAAM,KAAK;gBAChC,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;YAC1D;YAEA,MAAM,WAAW,MAAM,SAAS,IAAI;YACpC,IAAI,SAAS,MAAM,KAAK,GAAG;gBACzB,mBAAmB,EAAE;YACvB,OAAO;gBACL,mBAAmB;YACrB;QACF,EAAE,OAAO,OAAO;YACd,IAAI,iBAAiB,OAAO;gBAC1B,QAAQ,GAAG,CAAC,MAAM,OAAO;YAC3B;QACF;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IAEF,GAAE;QAAC;KAAa;IAEhB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,YAAY,aAAa,GAAG,CAAC;QACnC,MAAM,OAAO,YAAY,SAAS,WAAW,MAAM,IAAI,OAAO,WAAW;QACzE,IAAI,CAAC,MAAM,OAAO;YAChB,gBAAgB;QAClB;IACF,GAAG;QAAC;KAAa;IAEnB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe,gBAAgB,MAAM,CACzC,CAAC,IACC,GAAG,UAAU,CAAC,IAAI,KAAK,EAAE,IAAI,EAAE,QAAQ,GAAG,CAAC,CAAC,EAAE,cAAc,KAAK;QAErE,eAAe;IACjB,GAAG;QAAC;QAAiB;QAAc;KAAa;IAEhD,MAAM,eAAe,OAAO,eAAuB,OAAe;QAChE,IAAI;YACA,eAAe,CAAC,OACZ,KAAK,GAAG,CAAC,CAAC,cACN,YAAY,GAAG,KAAK,gBACd;wBAAE,GAAG,WAAW;wBAAE,CAAC,MAAM,EAAE;oBAAa,IACxC;YAId,MAAM,WAAW,MAAM,MAAM,iBAAiB;gBAC1C,QAAQ;gBACR,SAAS;oBACL,gBAAgB;gBACpB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACjB,KAAK;oBACL,UAAU;oBACV,OAAO;oBACP,MAAO,aAAa,GAAG,CAAC;gBAC5B;YACJ;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBACd,MAAM,eAAe,MAAM,SAAS,IAAI;gBACxC,MAAM,IAAI,MAAM,aAAa,OAAO,IAAI;YAC5C;YAEA,QAAQ,GAAG,CAAC;QAChB,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,+BAA+B;QACjD;IACJ;IAEA,MAAM,EAAE,WAAW,EAAE,UAAU,EAAG,UAAU,EAAG,OAAO,EAAE,GAAG,CAAA,GAAA,uJAAA,CAAA,oBAAiB,AAAD,EAAE;IAE7E,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc,YAAY,MAAM,CAAC,CAAC,OAAO;YAC7C,OAAO,KAAK,QAAQ,KAAK,aAAa,QAAQ,KAAK,KAAK,GAAG;QAC7D,GAAG;QAEH,MAAM,gBAAgB,YAAY,MAAM,CAAC,CAAC,OAAO;YAC/C,OAAO,KAAK,QAAQ,KAAK,WAAW,QAAQ,KAAK,OAAO,GAAG;QAC7D,GAAG;QAEH,MAAM,eAAc,YAAY,MAAM,CAAC,CAAC,OAAO;YAC7C,OAAO,KAAK,QAAQ,KAAK,WAAW,QAAQ,KAAK,OAAO,GAAG;QAC7D,GAAG;QAEH,MAAM,eAAc,YAAY,MAAM,CAAC,CAAC,OAAO;YAC7C,OAAO,KAAK,QAAQ,KAAK,WAAW,QAAQ,KAAK,KAAK,GAAG;QAC3D,GAAG;QAEH,MAAM,gBAAgB,gBAAgB,CAAC,cAAc,YAAY,IAAI;QACrE,iBAAiB;YACf;gBAAE,MAAM;gBAAe,QAAQ,cAAc;YAAa;YAC1D;gBAAE,MAAM;gBAAiB,QAAQ;YAAc;YAC/C;gBAAE,MAAM;gBAAgB,QAAQ;YAAa;YAC7C;gBAAE,MAAM;gBAAmB,QAAQ;YAAc;SAClD;IACH,GAAE;QAAC;KAAY;IAIb,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BACT;;;;;;0BAEL,8OAAC;gBAAI,WAAU;0BACd,cAAc,GAAG,CAAC,CAAC,QAAQ,sBAC1B,8OAAC;wBAEC,WAAW,CAAC,2GAA2G,EAAE,OAAO,MAAM,GAAG,IAAI,eAAc,gBAAgB;;0CAE3K,8OAAC;gCAAG,WAAU;0CACX,OAAO,IAAI;;;;;;0CAEd,8OAAC;gCAAE,WAAU;;oCAAwB;oCACjC,OAAO,MAAM,CAAC,cAAc;;;;;;;;uBAP3B;;;;;;;;;;0BAYT,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAA6B;;;;;;0CAC1C,8OAAC;gCAAI,WAAU;0CAAO,cAAA,8OAAC,sJAAA,CAAA,MAAG;oCAAC,MAAM;oCAAY,SAAS;wCAAE,qBAAqB;oCAAM;;;;;;;;;;;;;;;;;kCAIrF,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAA6B;;;;;;0CAC1C,8OAAC,sJAAA,CAAA,MAAG;gCAAC,MAAM;gCAAa,SAAS;gCAAS,WAAU;;;;;;;;;;;;kCAItD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAA6B;;;;;;0CAC1C,8OAAC,sJAAA,CAAA,MAAG;gCAAC,MAAM;gCAAY,SAAS;;;;;;;;;;;;;;;;;;0BAIpC,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAG,WAAU;kCAAgD;;;;;;kCAG9D,8OAAC;wBAAG,WAAU;;;;;;kCACd,8OAAC,wJAAA,CAAA,UAAS;wBACR,YAAY;wBACZ,OAAO;wBACP,kBAAkB;wBAClB,cAAc;wBACd,qBAAqB;wBACrB,iBAAiB;;;;;;kCAGnB,8OAAC;wBAAI,WAAU;kCAEd,oBAAoB,6BACnB,8OAAC;sCACA,YACE,MAAM,CAAC,CAAC;gCACP,MAAM,kBAAkB,mBACpB,YAAY,QAAQ,KAAK,mBACzB;gCACJ,MAAM,cAAc,eAChB,YAAY,IAAI,KAAK,eACrB;gCACJ,OAAO,mBAAmB;4BAC5B,GACC,GAAG,CAAC,CAAC,aAAa,sBACjB,8OAAC,6JAAA,CAAA,UAAc;oCAEb,aAAa;oCACb,cAAc;oCACd,OAAO;oCACP,YAAY;oCACZ,OAAO;mCALF;;;;;;;;;iDAUX,8OAAC;sCAAK,OAAO,OAAO,CAAC,qBAAqB,MAAM,GAAG,IACjD,OAAO,OAAO,CAAC,qBAAqB,GAAG,CAAC,CAAC,CAAC,KAAK,YAAY,iBACzD,8OAAC;oCAAc,WAAW,CAAC,8BAA8B,EAAE,YAAY,YAAY,GAAG,YAAY,UAAU,GAAG,IAAI,eAAc,gBAAgB;;sDAE/I,8OAAC;4CACC,WAAU;4CACV,SAAS,IAAM,UAAU;;8DAEzB,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAE,WAAU;sEACV;;;;;;sEAEH,8OAAC;4DAAE,WAAU;;gEAAsC;gEACxC,YAAY,UAAU,CAAC,OAAO,CAAC;;;;;;;sEAE1C,8OAAC;4DAAE,WAAU;;gEAAuC;gEACvC,YAAY,YAAY,CAAC,OAAO,CAAC;;;;;;;;;;;;;gDAG/C,YAAY,YAAY,CAAC,IAAI,CAAC,CAAC,cAAgB,CAAC,YAAY,QAAQ,IAAI,CAAC,YAAY,IAAI,mBACxF,8OAAC;oDAAE,WAAU;;sEACX,8OAAC;4DAAE,WAAU;;;;;;wDAAgD;;;;;;;8DAGjE,8OAAC;oDAAO,WAAU;8DACf,YAAY,CAAC,IAAI,GAAG,iBAAiB;;;;;;;;;;;;wCAI7C,cAAc,CAAC,IAAI,kBAClB,8OAAC;4CAAI,WAAU;sDACZ,YAAY,YAAY,CAAC,GAAG,CAAC,CAAC,aAAa,sBAC1C,8OAAC,6JAAA,CAAA,UAAc;oDAAa,aAAa;oDAAa,cAAc;oDAAc,OAAO;oDAAQ,YAAY;oDAAY,OAAO;mDAA3G;;;;;;;;;;;mCA9Bf;;;;0DAqChB,8OAAC;gCAAE,WAAU;0CAAoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAU3D"}},
    {"offset": {"line": 972, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}