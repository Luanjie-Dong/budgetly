{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/luanjiechen/Desktop/Projects/Personal_Projects/3.budget/my-budget/src/app/budget/%5Bmonth%5D/chart.tsx"],"sourcesContent":["import React from 'react';\n\ninterface ChartDataProps {\n  currentData: {\n    type: string;\n    category: string;\n    spend: number;\n    recieve: number\n  }[];\n}\n\nexport const generateChartData = (currentData: ChartDataProps['currentData']) => {\n    const groupDataByCategory = (data: typeof currentData, targetCategory: string) => {\n        const grouped = data\n          .filter((item) => item.category === targetCategory) \n          .reduce((summary, item) => {\n            if (!summary[item.type]) {\n              summary[item.type] = 0;\n            }\n\n            if (targetCategory == \"Income\" || targetCategory == \"Offset\"){\n                summary[item.type] += item.recieve;\n            }\n            else{   \n                summary[item.type] += item.spend;\n            }\n            \n            return summary;\n          }, {} as Record<string, number>);\n      \n        const labels = Object.keys(grouped);\n        const amounts = Object.values(grouped);\n      \n        return { labels, amounts };\n      };\n\n    const { labels: expenselabels, amounts: expenseamounts } = groupDataByCategory(currentData, \"Spending\");\n    const { labels: savinglabels, amounts: savingamounts } = groupDataByCategory(currentData, \"Saving\");\n    const { labels: incomelabels, amounts: incomeamounts } = groupDataByCategory(currentData, \"Income\");\n    const { labels: offsetlabels, amounts: offsetamounts } = groupDataByCategory(currentData, \"Offset\");\n\n    const adjustedExpenseAmounts = expenselabels.map((label, index) => {\n      const offsetIndex = offsetlabels.indexOf(label);\n    \n      if (offsetIndex !== -1) {\n        return expenseamounts[index] - offsetamounts[offsetIndex];\n      }\n\n      return expenseamounts[index];\n    });\n\n  const expensedata = {\n    labels: expenselabels,\n    datasets: [\n      {\n        label: \"Expense Breakdown\",\n        data: adjustedExpenseAmounts,\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.5)\", // Red\n          \"rgba(54, 162, 235, 0.5)\", // Blue\n          \"rgba(255, 206, 86, 0.5)\", // Yellow\n          \"rgba(75, 192, 192, 0.5)\", // Green\n          \"rgba(153, 102, 255, 0.5)\", // Purple\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\", // Red\n          \"rgba(54, 162, 235, 1)\", // Blue\n          \"rgba(255, 206, 86, 1)\", // Yellow\n          \"rgba(75, 192, 192, 1)\", // Green\n          \"rgba(153, 102, 255, 1)\", // Purple\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const savingdata = {\n    labels: savinglabels,\n    datasets: [\n      {\n        label: \"Savings Breakdown\",\n        data: savingamounts,\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.5)\", // Red\n          \"rgba(54, 162, 235, 0.5)\", // Blue\n          \"rgba(255, 206, 86, 0.5)\", // Yellow\n          \"rgba(75, 192, 192, 0.5)\", // Green\n          \"rgba(153, 102, 255, 0.5)\", // Purple\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\", // Red\n          \"rgba(54, 162, 235, 1)\", // Blue\n          \"rgba(255, 206, 86, 1)\", // Yellow\n          \"rgba(75, 192, 192, 1)\", // Green\n          \"rgba(153, 102, 255, 1)\", // Purple\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const incomedata = {\n    labels: incomelabels,\n    datasets: [\n      {\n        label: \"Savings Breakdown\",\n        data: incomeamounts,\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.5)\", // Red\n          \"rgba(54, 162, 235, 0.5)\", // Blue\n          \"rgba(255, 206, 86, 0.5)\", // Yellow\n          \"rgba(75, 192, 192, 0.5)\", // Green\n          \"rgba(153, 102, 255, 0.5)\", // Purple\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\", // Red\n          \"rgba(54, 162, 235, 1)\", // Blue\n          \"rgba(255, 206, 86, 1)\", // Yellow\n          \"rgba(75, 192, 192, 1)\", // Green\n          \"rgba(153, 102, 255, 1)\", // Purple\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\" as \"top\", // Ensure TypeScript recognizes this as the expected literal type\n      },\n      datalabels: {\n        color: \"#fff\",\n        font: {\n          size: 14,\n        },\n        formatter: (value: number, context: any) => {\n          const label = context.chart.data.labels[context.dataIndex];\n          return `$${value.toFixed(2)}`;\n        },\n      },\n    },\n  };\n\n  return { expensedata, savingdata, incomedata , options };\n};\n"],"names":[],"mappings":";;;AAWO,MAAM,oBAAoB,CAAC;IAC9B,MAAM,sBAAsB,CAAC,MAA0B;QACnD,MAAM,UAAU,KACb,MAAM,CAAC,CAAC,OAAS,KAAK,QAAQ,KAAK,gBACnC,MAAM,CAAC,CAAC,SAAS;YAChB,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,EAAE;gBACvB,OAAO,CAAC,KAAK,IAAI,CAAC,GAAG;YACvB;YAEA,IAAI,kBAAkB,YAAY,kBAAkB,UAAS;gBACzD,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO;YACtC,OACI;gBACA,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,KAAK;YACpC;YAEA,OAAO;QACT,GAAG,CAAC;QAEN,MAAM,SAAS,OAAO,IAAI,CAAC;QAC3B,MAAM,UAAU,OAAO,MAAM,CAAC;QAE9B,OAAO;YAAE;YAAQ;QAAQ;IAC3B;IAEF,MAAM,EAAE,QAAQ,aAAa,EAAE,SAAS,cAAc,EAAE,GAAG,oBAAoB,aAAa;IAC5F,MAAM,EAAE,QAAQ,YAAY,EAAE,SAAS,aAAa,EAAE,GAAG,oBAAoB,aAAa;IAC1F,MAAM,EAAE,QAAQ,YAAY,EAAE,SAAS,aAAa,EAAE,GAAG,oBAAoB,aAAa;IAC1F,MAAM,EAAE,QAAQ,YAAY,EAAE,SAAS,aAAa,EAAE,GAAG,oBAAoB,aAAa;IAE1F,MAAM,yBAAyB,cAAc,GAAG,CAAC,CAAC,OAAO;QACvD,MAAM,cAAc,aAAa,OAAO,CAAC;QAEzC,IAAI,gBAAgB,CAAC,GAAG;YACtB,OAAO,cAAc,CAAC,MAAM,GAAG,aAAa,CAAC,YAAY;QAC3D;QAEA,OAAO,cAAc,CAAC,MAAM;IAC9B;IAEF,MAAM,cAAc;QAClB,QAAQ;QACR,UAAU;YACR;gBACE,OAAO;gBACP,MAAM;gBACN,iBAAiB;oBACf;oBACA;oBACA;oBACA;oBACA;iBACD;gBACD,aAAa;oBACX;oBACA;oBACA;oBACA;oBACA;iBACD;gBACD,aAAa;YACf;SACD;IACH;IAEA,MAAM,aAAa;QACjB,QAAQ;QACR,UAAU;YACR;gBACE,OAAO;gBACP,MAAM;gBACN,iBAAiB;oBACf;oBACA;oBACA;oBACA;oBACA;iBACD;gBACD,aAAa;oBACX;oBACA;oBACA;oBACA;oBACA;iBACD;gBACD,aAAa;YACf;SACD;IACH;IAEA,MAAM,aAAa;QACjB,QAAQ;QACR,UAAU;YACR;gBACE,OAAO;gBACP,MAAM;gBACN,iBAAiB;oBACf;oBACA;oBACA;oBACA;oBACA;iBACD;gBACD,aAAa;oBACX;oBACA;oBACA;oBACA;oBACA;iBACD;gBACD,aAAa;YACf;SACD;IACH;IAEA,MAAM,UAAU;QACd,YAAY;QACZ,SAAS;YACP,QAAQ;gBACN,UAAU;YACZ;YACA,YAAY;gBACV,OAAO;gBACP,MAAM;oBACJ,MAAM;gBACR;gBACA,WAAW,CAAC,OAAe;oBACzB,MAAM,QAAQ,QAAQ,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,SAAS,CAAC;oBAC1D,OAAO,CAAC,CAAC,EAAE,MAAM,OAAO,CAAC,IAAI;gBAC/B;YACF;QACF;IACF;IAEA,OAAO;QAAE;QAAa;QAAY;QAAa;IAAQ;AACzD"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}