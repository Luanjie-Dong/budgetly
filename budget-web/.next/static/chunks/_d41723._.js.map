{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/luanjiechen/Desktop/Projects/Personal_Projects/3.budget/my-budget/src/app/budget/%5Bmonth%5D/page.tsx"],"sourcesContent":["'use client'\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from 'next/navigation';\nimport { useSearchParams } from \"next/navigation\";\n\n\ninterface transaction{\n    category:string,\n    Information:string,\n    type:string,\n    date: Date,\n    recieve: number,\n    spend:number\n    key:string\n  }\n\n  interface MonthPageProps {\n    params: Promise<{ month: string }>;\n  }\n\nexport default function Month({ params }: MonthPageProps) {\n    const [transactionData,setTransactionData] = useState<transaction[]>([])\n    const [selectedYear, setSelectedYear] = useState(0)\n    const [currentData,setCurrentData] = useState<transaction[]>([])\n    const { month } = React.use(params);\n    const currentMonth = decodeURIComponent(month)\n    const transactions_endpoint = \"http://127.0.0.1:1000/get-transactions\"\n    const update_endpoint = \"http://127.0.0.1:1000/modify-transactions\"\n    const searchParams = useSearchParams();\n    const types = [\"Food\",\"Shopping\",\"GF\",\"Phone Bill\", \"Health\",\"Others\",\"Car Rental\",\"Travel\",\"Singlife\",\"Stashaway\",\"Tiger Broker\",\"Transportation\",\"Job\"]\n    const categories = [\"Saving\",\"Spending\",\"Income\"]\n    const monthNames = [\n      \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n      \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n      ];\n\n    const get_transactions = async () => {\n      try {\n        const url = `${transactions_endpoint}?year=${encodeURIComponent(selectedYear)}`;\n    \n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n    \n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n    \n        const jsonData = await response.json();\n        if (jsonData.length === 0) {\n          setTransactionData([]);\n        } else {\n          setTransactionData(jsonData);\n        } \n      } catch (error) {\n        if (error instanceof Error) {\n          console.log(error.message);\n        }\n      }\n    };\n\n    useEffect(() => {\n      get_transactions();\n      \n    },[selectedYear]);\n\n    useEffect(() => {\n        const yearParam = searchParams.get('year');\n        const year = yearParam ? parseInt(yearParam, 10) : new Date().getFullYear(); \n        if (!isNaN(year)) {\n          setSelectedYear(year); \n        }\n      }, [searchParams]);\n\n    useEffect(() => {\n      const filteredData = transactionData.filter(\n        (x) =>\n          `${monthNames[new Date(x.date).getMonth()]} ${selectedYear}` === currentMonth\n      );\n      setCurrentData(filteredData);\n    }, [transactionData, currentMonth, selectedYear]);\n\n    const handleUpdate = async (transactionId: string, field: string, modify_value: string) => {\n      try {\n          setCurrentData((prev) =>\n              prev.map((transaction) =>\n                  transaction.key === transactionId\n                      ? { ...transaction, [field]: modify_value }\n                      : transaction\n              )\n          );\n  \n          const response = await fetch(update_endpoint, {\n              method: \"POST\",\n              headers: {\n                  \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                  key: transactionId,\n                  category: field, \n                  value: modify_value,\n                  year : searchParams.get('year')\n              }),\n          });\n  \n          if (!response.ok) {\n              const errorDetails = await response.json();\n              throw new Error(errorDetails.message || \"Failed to update transaction\");\n          }\n  \n          console.log(\"Transaction updated successfully\");\n      } catch (error) {\n          console.error(\"Error updating transaction:\", error);\n      }\n  };\n  \n      \n  \n      \n    return (\n      <div className=\"mt-28 flex flex-col justify-center items-center dark:bg-black\">\n        <h1 className=\"text-6xl font-bold dark:text-white text-center mb-8\">\n            {currentMonth}\n        </h1>\n        <div>\n            <h2 className=\"text-4xl font-semibold mt-8 mb-6 text-gray-800 dark:text-gray-300 text-center\">\n            Transactions\n            </h2>\n            <div className=\"space-y-4\">\n            {currentData.length > 0 ? (\n                currentData.map((transaction, index) => (\n                <div\n                    key={index}\n                    className=\" bg-white dark:bg-gray-800 rounded-lg shadow hover:shadow-lg transition\"\n                >\n                    <div className=\"flex flex-wrap md:flex-nowrap items-center gap-4 p-4 justify-center\">\n                      <p className=\"text-lg font-medium text-gray-600 dark:text-gray-300 w-28\">\n                      {new Date(transaction.date).toLocaleDateString()}\n                      </p>\n                      <p className=\"text-lg text-red-500 font-semibold w-20\">\n                      Spend: ${transaction.spend.toFixed(2)}\n                      </p>\n                      <p className=\"text-lg text-green-500 font-semibold w-20\">\n                      Receive: ${transaction.recieve.toFixed(2)}\n                      </p>\n                      <div className=\"w-38\">\n                        <label className=\"block text-lg text-center font-medium text-gray-700 dark:text-gray-300\">Category</label>\n                        <select\n                            value={transaction.category || \"\"}\n                            onChange={(e) => handleUpdate(transaction.key, \"category\", e.target.value)}\n                            className={`mt-1 block w-full px-3 py-1.5 text-gray-800 dark:text-gray-300 rounded-md ${\n                              transaction.category === \"Spending\"\n                                ? \"bg-red-400 dark:bg-red-600\"\n                                : transaction.category === \"Income\"\n                                ? \"bg-green-400 dark:bg-green-600\"\n                                : transaction.category === \"Saving\"\n                                ? \"bg-blue-400 dark:bg-blue-600\"\n                                : \"bg-gray-100 dark:bg-gray-700\"\n                            }`}\n                        >\n                            <option value=\"\">Select</option>\n                            {categories.map((category,index) =>(\n                              <option key={index}>{category}</option>\n                            ))}\n                        </select>\n                      </div>\n                      <div className=\"w-38\">\n                          <label className=\"block text-lg text-center font-medium text-gray-700 dark:text-gray-300\">Type</label>\n                          <select\n                              value={transaction.type || \"\"}\n                              onChange={(e) => handleUpdate(transaction.key, \"type\", e.target.value)}\n                              className=\"mt-1 block w-full px-3 py-1.5 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-300 rounded-md text-center\"\n                          >\n                              <option value=\"\">Select</option>\n                              {types.map((type,index) =>(\n                                <option key={index}>{type}</option>\n                              ))}\n                          </select>\n                      </div> \n                    </div>\n                    <div className=\"text-center p-4\">\n                      <p className=\"text-lg text-gray-600 dark:text-gray-300 flex-grow\">\n                      {transaction.Information}\n                      </p>\n                    </div>\n                    \n                </div>\n                ))\n            ) : (\n                <p className=\"text-center text-lg text-gray-500\">\n                No transactions found for this month.\n                </p>\n            )}\n            </div>\n        </div>\n        </div>\n      \n      \n    );\n  }"],"names":[],"mappings":"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"}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///Users/luanjiechen/Desktop/Projects/Personal_Projects/3.budget/my-budget/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0]}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}